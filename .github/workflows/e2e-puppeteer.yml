name: E2E - Puppeteer MCV

on:
  workflow_call:
    inputs:
      suite:
        description: 'Suite da eseguire (smoke|full)'
        required: false
        type: string
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      suite:
        description: 'Suite da eseguire (smoke|full)'
        required: false
        default: 'full'

jobs:
  smoke:
    if: >
      github.event_name == 'pull_request' ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.suite || 'full') == 'smoke') ||
      (github.event_name == 'workflow_call' && (inputs.suite || 'full') == 'smoke')
    name: Smoke e2e
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      E2E_DISABLE_MEDIA: '1'
      VITEST_FORCE_ALL: 'false'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure docker compose env file
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          version: '10.17.1'

      - name: Resolve pnpm store directory
        id: pnpm-store
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Warm docker compose services
        run: docker compose -f infra/docker-compose.yml up -d postgres redis minio

      - name: Install workspace dependencies
        run: pnpm -w install --frozen-lockfile

      - name: Install Chrome for Puppeteer
        run: pnpm --filter "@influencerai/e2e" exec puppeteer browsers install chrome

      - name: Launch MCV server
        run: |
          pnpm --filter "@influencerai/e2e" run e2e:server > smoke-server.log 2>&1 &

      - name: Wait for health endpoint
        run: pnpm --filter "@influencerai/e2e" exec wait-on http-get://localhost:5173/healthz

      - name: Run smoke tests
        env:
          E2E_BASE: http://localhost:5173
        run: pnpm --filter "@influencerai/e2e" run e2e:test:smoke

      - name: Teardown docker compose
        if: always()
        run: docker compose -f infra/docker-compose.yml down --remove-orphans

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-e2e-logs
          path: smoke-server.log

  full:
    if: >
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.suite || 'full') == 'full') ||
      (github.event_name == 'workflow_call' && (inputs.suite || 'full') == 'full')
    name: Full e2e
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard_index: [1, 2]
    env:
      CI: 'true'
      E2E_DISABLE_MEDIA: '1'
      VITEST_FORCE_ALL: '1'
      VITEST_TOTAL_SHARDS: 2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure docker compose env file
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: ./.github/actions/setup-pnpm
        with:
          version: '10.17.1'

      - name: Resolve pnpm store directory
        id: pnpm-store
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Warm docker compose services
        run: docker compose -f infra/docker-compose.yml up -d postgres redis minio

      - name: Install workspace dependencies
        run: pnpm -w install --frozen-lockfile

      - name: Install Chrome for Puppeteer
        run: pnpm --filter "@influencerai/e2e" exec puppeteer browsers install chrome

      - name: Launch MCV server
        run: |
          pnpm --filter "@influencerai/e2e" run e2e:server > full-server-${{ matrix.shard_index }}.log 2>&1 &

      - name: Wait for health endpoint
        run: pnpm --filter "@influencerai/e2e" exec wait-on http-get://localhost:5173/healthz

      - name: Run full suite shard
        env:
          E2E_BASE: http://localhost:5173
          VITEST_SHARD_INDEX: ${{ matrix.shard_index }}
        run: |
          pnpm --filter "@influencerai/e2e" run e2e:test

      - name: Teardown docker compose
        if: always()
        run: docker compose -f infra/docker-compose.yml down --remove-orphans

      - name: Upload full artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-e2e-shard-${{ matrix.shard_index }}-logs
          path: full-server-${{ matrix.shard_index }}.log
