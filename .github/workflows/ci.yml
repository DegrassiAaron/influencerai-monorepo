name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'infra/**'
      - 'scripts/**'
      - 'docs/**'
      - 'README.md'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Do not use setup-node pnpm cache to avoid pnpm lookup at this step

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

<<<<<<< HEAD
      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Prisma cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('pnpm-lock.yaml', '**/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies (frozen lockfile)
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client (API)
        run: pnpm --filter @influencerai/api prisma:generate

=======
>>>>>>> 391b74b (ci: enforce pnpm frozen-lockfile; sync pnpm-lock.yaml for workspace deps)
      - name: Install dependencies (frozen lockfile)
        run: pnpm install --frozen-lockfile

      - name: Lint Web
        run: pnpm --filter @influencerai/web lint

      - name: Test Web (unit)
        run: pnpm --filter @influencerai/web test

      - name: Test API (unit)
        run: pnpm --filter @influencerai/api test

      - name: Test API (e2e)
        env:
          # Provide a safe default for Prisma during tests
          DATABASE_URL: postgresql://user:pass@localhost:5432/db?schema=public
        run: pnpm --filter @influencerai/api test:e2e

  build-images:
    name: Build Docker images
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          tags: ${{ github.repository }}:${{ matrix.name }}-ci
          cache-from: type=gha
          cache-to: type=gha,mode=max
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: api
            dockerfile: apps/api/Dockerfile
          - name: web
            dockerfile: apps/web/Dockerfile
          - name: worker
            dockerfile: apps/worker/Dockerfile
