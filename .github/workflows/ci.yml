name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-and-build:
    name: Install and build (pnpm workspace)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack and prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.17.1 --activate

      - name: Resolve pnpm store directory
        id: pnpm-store
        run: echo "path=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            apps/**/node_modules
            packages/**/node_modules
            tests/**/node_modules
          key: ${{ runner.os }}-pnpm-modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-modules-

      - name: Cache Prisma engines
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/prisma
          key: ${{ runner.os }}-prisma-${{ hashFiles('pnpm-lock.yaml', 'apps/api/prisma/schema.prisma') }}
          restore-keys: |
            ${{ runner.os }}-prisma-

      - name: Install dependencies (frozen lockfile)
        run: pnpm -w install --frozen-lockfile --prefer-offline

      - name: Run workspace build
        run: pnpm -w build

      - name: Upload build artifacts (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/**/dist/**
            packages/**/dist/**
